[{"categories":null,"content":"The concise, stress free guide start your journey to break into tech for 1st and 2nd year CS students.","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Goals Establish your reputation by showing employers your Proof Of Skill Setup a personal website to showcase your projects Introduction to technical interviews Have fun — life is short Seriously, it’s all going to work out. ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:1:0","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Proof Of Skill Build an application that solves a small problem Show it to the world by deploying it with Heroku, GitHub Pages, Netlify, or AWS/GCP (in order of easiest to hardest) The point of this is for you yourself to learn how to go from an idea in your head to a tangible product that anyone in the world can use (AKA the process of software engineering). Once you can do it yourself and employers can see that you’ve done it yourself, you’ll stand out amongst the crowd. It will be a no-brainer for them to take a chance on you with an interview. As a bonus, it will give you something substantial to talk about in your interviews as well. In college, I got away with showcasing projects from college classes and stuff I built with friends at hackathons. Hackathons are great because you don’t have to scramble to find time between exams and class projects. Since y’all started CS way before me, this is a chance to get 1 step ahead. Here’s an example app, Pinpoint Neighborhoods, that I made for fun, built on React, using the Google Maps API and OpenRouteService API. It will find the best neighborhood for you to live in based on what locations you want to live near. If I want to live near a Trader Joe’s and Blue Bottle Coffee shop in NY, it tells me I should live in Midtown East, Manhattan Seem complicated? Maybe at first. However, once you understand that all applications online are made up of 3 basic components, what I did will seem trivial. All I did was build out a Frontend UI and string together some already existing Backend APIs (on their free tiers). If I wanted to add managing user accounts, I will eventually have to connect my app to a Data Layer. Soon, you’ll be able to bring your ideas to life too, all by typing a bunch of keys on your keyboard, just like I figured out how to anser the question “what’s the best neighborhood to live in if I want to be within 10 minutes of coffee, groceries, etc.” to build Pinpoint Neighborhoods. Let’s get started! Most applications are made of these 3 core components: ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:2:0","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Frontend UI Choose Web or Mobile. Examples include React, Swift, Android, React Native, etc. Build an interactive UI that takes in some input data with a basic form, calls an API, and displays output to the user Along the way, you might end up learning: The basics of the Model-View-Controller architecture UI state management is hard, but frameworks like React try to make them easier Making things look nice is also hard —\u003e check out Bootstrap In JavaScript “callback hell” and you’re forced to figure out how to code asynchronously ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:2:1","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Backend API Build a basic HTTP server Every language should come with a library to setup a basic HTTP server. If you’re just starting out, I’d suggest building an API in JavaScript (Node/Express), Python, or Go. Call your HTTP server from the Frontend UI Run the server in the command line and attempt to call the API from the Frontend UI to return some useful information. Retrieve information from a free online API Find a free API online and call it from your backend HTTP Server API. For instance, your backend API could call a free Weather API to get today’s forecast, a Crypto Exchange API to get the price of bitcoin, the Google Maps API to get restaurants near you, use IMDb’s API to analyze movies, etc. Along the way, you’ll learn: Basics of RESTful interfaces (GET, PUT, POST, etc.) Running servers at a host/port and calling it from your frontend, glueing together your frontend and backend How to parse JSON Basic API authentication using tokens How to deploy your API to the world and use it from anywhere with an internet connection ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:2:2","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Data Layer Use a database to store data for your application. For example, you could use Firebase, MySQL, MongoDB, etc. Along the way, you’ll learn: How to setup a database and connect to it from your Frontend UI or Backend API using a connection string The basics of MySQL How to setup tables with fields and figuring out what is the primary key, what concepts you should separate out into different tables, etc. For example, if you’re storing user information for a social media app, you might make a User table, Posts table, etc. How would you model a friend request? How would you retrieve all the posts for a given user? How would you retrieve all the posts from a User’s friends to build a newsfeed? ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:2:3","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Personal Website Throughout your career, it’s to your benefit if you establish a personal brand of who you are, what you’ve built, and what skills you bring to the table. It’s a career-long process that compounds over time, and we’re just going to lay the foundation. Your personal website should be an extended, more interesting version of your resume. Start with using GitHub Pages, a free hosting service that let’s you put a static website at \u003cgithub-username\u003e.github.io Create a page on GitHub Pages and summarize your project with a description of what it is, how you built it, what you learned, and plenty of screen shots or GIFs Create an About , Projects , and Writing page e.g. https://visaals.github.io is what I used to showcase my projects in college Create an About page and a Projects page. Over time, you’ll add projects to showcase new things you’ve learned. You can also write blog posts or tutorials to help others on their career journey. The best person to learn from is someone just a couple steps ahead of you because they remember the struggles you’re dealing with now. Software Engineering is a positive sum game. You win by helping others win. I need to add more posts (especially technical ones) to https://visaalambalam.com Here’s an example of some top 1% personal websites https://intuitiveexplanations.com/ https://jeremyaguilon.me/blog/ranking_interview_questions_by_cram_score By no means does your website have to be as detailed as the examples above to do well, but it can only help you and others. ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:3:0","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Technical Interviews It’s a bit early to start preparing for these during your freshman year summer, but if you’re curious and are satisfied with your project, take a look at leetcode.com and do the “most liked, easy” problems to start with. Here are the most important categories to understand deeply: HashTable Array String Graph (BFS, DFS) Trees (Binary Tree Traversal) Sorting (MergeSort) Searching (Binary Search, Graph Searches) Start with “Reverse a String”, “Reverse a Linked List”, “2Sum” problems. If you’re feeling adventurous, attempt the “Word Search” problem. Focus on understanding how and why these core data structures and algorithms work. If I asked you to explain how a hash table works under the hood, could you explain it by heart AND answer follow up questions? Why would you pick a BFS over a DFS? ALWAYS think about tradeoffs with each decision you make. Should I use an Array or List? Should I represent my graph as a 2D array or an Adjacency List? Evaluating tradeoffs are the bread and butter of engineering and interviewing. In the future, how you solve these problems is just as important as getting the right answer in a 45-60 minute interview. More to come next year! ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:4:0","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"Most importantly, have fun. Pick a project that compels you. Try to find DS/Algorithms that you find cool and don’t put too much pressure on yourself if you make mistakes. Follow your curiosity. If you wondered how auto-complete works, there’s a leetcode question for that! It’s pretty cool and uses a Trie data structure. Luckily for you, CS is not a zero sum game like applying to medical schools. There is an abundance of jobs. If you don’t get the best internship the first year, there’s always the next year. The same applies to after you graduate. You have time and there’s no pressure. Enjoy the journey because if you don’t, pick a different career. Have fun (required) ","date":"2021-09-12","objectID":"/the-easy-way-to-stand-out-as-an-early-cs-student/:5:0","tags":null,"title":"Standing Out As An Early CS Student","uri":"/the-easy-way-to-stand-out-as-an-early-cs-student/"},{"categories":null,"content":"1 out of 8 college grads are unemployed. ~40% of recent colleges are underemployed. Learn precisely what you need to know before committing 4 years and tens of thousands of dollars to today's antiquated academic institutions.","date":"2020-08-05","objectID":"/the-invisible-curriculum/","tags":null,"title":"The Invisible Curriculum: What Colleges Fail To Teach","uri":"/the-invisible-curriculum/"},{"categories":null,"content":"Getting a degree isn’t going to get you a job. Period. “Well, duh Visaal of course liberal arts majors are going to have a tough time finding a job, but chill bro we’re good cause we’re in STEM.” Not true. Although our job prospects are significantly better, I’ve seen, over and over again, people in complete anguish with how they spent four years and thousands of dollars getting a degree and are still not able to find a software engineering job even after sending hundreds of applications out into this “record-breaking hot job market.” The story that hit me the hardest was when I was chatting with an Uber driver on my way back from the STL airport. We were talking about college, since he figured I was a student, and mentioned how he had a degree in actuarial science but could never find a job using the degree. He said bluntly with a hint of regret that “I made more money from trucking than I ever did with my degree” and concluded that getting jobs were more about “who you know than what you know.\" I was shocked that the Uber driver concluded that even for actuaries, a highly technical career assessed by a series of increasingly difficult statistics exams, what you knew didn’t matter as much as who. You can’t just walk into an actuarial job because your uncle is an exec at the company and figure out how to statistically asses risk; you’d be fired within a week. Only after experiencing firsthand the complete mismatch between excelling in your degree and what is required of you to get a job in my own field of CS did it dawn on me the Uber driver was right all along. Who you knew did matter immensely, but instead of needing to know an exec to get a job, you needed to know the people that can teach you The Invisible Curriculum — the knowledge gap between getting a degree and landing a job. The Invisible Curriculum is the knowledge gap between getting a degree and getting a job actual depiction of the knowledge gap There are so many hardworking people out here being sold the story that getting an education will lead you to a better life. They take the initiative and, against all odds, bootstrap their way towards completing a degree only to have their souls crushed when the rejection letters start coming in when they apply for jobs. The status quo and the collegiate institution has utterly failed these students. Universities take pride in not being job training programs, but what do most people go to university in the first place for? To. Get. Better. Jobs. To be fair, some universities have realized that this knowledge gap exists and have invested in career centers. WashU had a great career center, and I was able to learn so much about how to craft an effective resume, what are companies looking for when asking behavioral questions, and other solid career advice. I wondered why this insane value-add of a resource was so overlooked. “dude, I can’t find a job idk what I’m doing wrong” “have you been to the Career Center?” “the what?” this conversation happened at least a dozen times Even so, the career center is more of a bandaid than a guiding force throughout a student’s college experience. It’s almost as if the college administration was caught off guard that their students weren’t able to get good jobs after college (presumably in some trustee board meeting where some analyst presented the lackluster employment metrics of graduates), so they invested in a career center. College was never designed to make you employable The issue with the behemoth that is the current day bloated academic institution is that they’re so massive — they have so much organizational inertia — that it would be nearly impossible for them to change anything foundational about them. Yeah, they can slap on some bandaids like career centers, but they can’t redesign the institution from the ground up. As universities keep raising tuition year after year, college becomes less and less valuable. The industry is ripe for disruption. It’s already happening with comp","date":"2020-08-05","objectID":"/the-invisible-curriculum/:0:0","tags":null,"title":"The Invisible Curriculum: What Colleges Fail To Teach","uri":"/the-invisible-curriculum/"},{"categories":null,"content":"Thank You for Subscribing ","date":"2020-06-07","objectID":"/thank-you/:0:0","tags":null,"title":"","uri":"/thank-you/"},{"categories":null,"content":"It’s great to have ya If you want to learn a bit about me, check out my about page If you want to read my featured blog posts, go to my home page If you want to do your own thing, that’s cool too! ","date":"2020-06-07","objectID":"/thank-you/:0:1","tags":null,"title":"","uri":"/thank-you/"},{"categories":null,"content":"Please Confirm Your Email Subscription ","date":"2020-06-07","objectID":"/confirm-subscription/:0:0","tags":null,"title":"","uri":"/confirm-subscription/"},{"categories":null,"content":"You’re almost subscribed Look for an email with the following subject line: Confirm Your Subscription To Visaal’s Newsletter In the meantime, I hope you enjoyed this somewhat tangentially related illustration courtesy of unDraw, an open source design initiative. ","date":"2020-06-07","objectID":"/confirm-subscription/:0:1","tags":null,"title":"","uri":"/confirm-subscription/"},{"categories":null,"content":"In a nutshell, I want to! That’s it. That’s the blog post. (jk) ","date":"2020-05-22","objectID":"/why-im-starting-this-blog/:0:0","tags":null,"title":"Why I'm Starting This Blog","uri":"/why-im-starting-this-blog/"},{"categories":null,"content":"Paying It Forward If I ever needed to figure out how to do something, some random stranger always had my back and took the time out of their day to post their solution online. This must have happened thousands of times, and I got access to this information without paying a single dime out of my pocket. After being pushed forward countless times by strangers on the internet to become the software engineer I am today, it only feels right to pay it forward to the next person who aspires to build. ","date":"2020-05-22","objectID":"/why-im-starting-this-blog/:0:1","tags":null,"title":"Why I'm Starting This Blog","uri":"/why-im-starting-this-blog/"},{"categories":null,"content":"Solidifying Understanding When you’re forced to put things down on paper, it becomes clear what you understand and what you don’t. I have learned a ton of specific knowledge as a software engineer so far, and I hope to ingrain that knowledge in this blog. In the best case, the specific knowledge in this blog will provide value to at least one other person. In the worst case, this blog will establish additional credibility for me as an engineer. ","date":"2020-05-22","objectID":"/why-im-starting-this-blog/:0:2","tags":null,"title":"Why I'm Starting This Blog","uri":"/why-im-starting-this-blog/"},{"categories":null,"content":"Becoming a Role Model If anyone claims they accomplished something on their own, they are mistaken. We stand on the shoulders of giants. Everyone’s accomplishments, both individually and as a whole, are built on the works of our predecessors and the guidance of our role models. Just like Aang from Avatar: The Last Airbender needed the help of previous avatars to save the world, we need role models to help us persevere and most importantly — to believe in us. If anyone is an aspiring software engineer and is struggling to find software engineering job, feel free to reach out to me anytime. My twitter DMs are open @visaals. I’ve been through the job hunting process and can confirm it sucks. The unfortunate reality is that software engineering skills do not cleanly translate to demonstrating software engineering skills in while interviewing. I have spent considerable amount of time and energy curating the content I found most helpful, persevering through failed interviews, and ultimately getting four New Grad SWE job offers that more than doubled my intern return offer of 69k annually. ","date":"2020-05-22","objectID":"/why-im-starting-this-blog/:0:3","tags":null,"title":"Why I'm Starting This Blog","uri":"/why-im-starting-this-blog/"},{"categories":null,"content":"Chasing The Dream of Passive Income For the past ~2 years, I’ve followed several creators achieving a passive income through this process: consistently giving away valuable content for free for years, which leads to establishing credibility with an unique online brand, with hours of useful content as proof, which leads to gradually building an audience of people that have gained value from your content, trust your expertise in certain areas, and benefit from your curated content recommendations, which allows you to utilize your audience as a distribution network for occasional paid content, in additional to the usual free content, with the idea is that the paid content is a form of digital wealth — “create once, sell forever”, which compares to real estate wealth — “buy property, rent forever” or business wealth — “create a profitable business, sell the products forever.” Here are a few examples of people who’ve followed this exact path growing positive-sum internet economy: @mattdavella — YouTuber, Productivity Expert @AliAbdaal — YouTuber, Productivity/Study Expert, Coder, Entrepreneur, Doctor @thejohnfish — YouTuber, Productivity/Study Expert, Student, Coder @dvassallo — SWE, Entrepreneur @stewfortier — SWE, shoutout to this article that was the straw that broke the camel’s back for this blog @david_perell — Writer ","date":"2020-05-22","objectID":"/why-im-starting-this-blog/:0:4","tags":null,"title":"Why I'm Starting This Blog","uri":"/why-im-starting-this-blog/"},{"categories":null,"content":"Paving The Way Forward I’ve always had an inkling of a desire to start a blog since college while learning to program, but, like many others, I second guessed myself with thoughts like: “I’m not really qualified to give advice” “I don’t want to step on someone’s toes with my opinion” “It’s just a waste of time; I might as well be typing into the void” “People are going to think I’m weird!” ← the scariest thought personally, although it’s a true fact lol. etc. etc. etc. “Whether you think you can, or you think you can’t–you’re right.” — Henry Ford It turns out every single internet creator that “made it” also had these thoughts. The point is that you don’t have to be an expert at something to be qualified to teach something. You don’t need a PhD in math to teach fractions to 4th graders. With that in mind, I’m going to start off by writing about the practical things I’ve done (so far): Step-by-step: How To Double Your $70k SWE Salary Learn the System, Game the System: how to use the internet to achieve practically anything you want (a meta version of #1, going beyond the common “just google it” advice) And the stuff I’m currently learning: How to Quickly Understand a Giant Codebase (currently learning) SWE’s Guide to Efficient Note Taking The Most Frustrating Bugs I’ve Come Across And How To Avoid Them, a recurring series And general interesting thoughts and ideas I have and come across: How The Internet is The Greatest Equalizer in History Life as Series of Games And more, coming soon to an inbox near you! ","date":"2020-05-22","objectID":"/why-im-starting-this-blog/:0:5","tags":null,"title":"Why I'm Starting This Blog","uri":"/why-im-starting-this-blog/"},{"categories":null,"content":"Final Thoughts If you’ve made it this far, thank you. If you’re particularly interested in anything above, let me know on twitter and consider subscribing to get notified of new posts. Special thanks to my friends who’ve endured me talking about starting a blog for years yet still tirelessly encouraging it. You all know who you are :) If you want to be notified when I make new content, join my email list (below). ","date":"2020-05-22","objectID":"/why-im-starting-this-blog/:0:6","tags":null,"title":"Why I'm Starting This Blog","uri":"/why-im-starting-this-blog/"},{"categories":null,"content":"Hi, I’m Visaal Ambalam. I am a software engineer Nightfall AI, currently enjoying the process of learning how to build distributed systems. I am an aspiring content creator, hence this blog! I tend to be ruthlessly practical (for better or worse). I am fascinated by technology. ","date":"2020-05-10","objectID":"/about/:1:0","tags":null,"title":"About Visaal","uri":"/about/"},{"categories":null,"content":"In the past, I thought I wanted to be a doctor. I realized I like building things. I studied Computer Science and Math at Washington University in St. Louis. I built web apps at Cerner and ObodoHub. I built big data distributed systems at Liveramp. ","date":"2020-05-10","objectID":"/about/:2:0","tags":null,"title":"About Visaal","uri":"/about/"},{"categories":null,"content":"Contact Find me on twitter @visaals ","date":"2020-05-10","objectID":"/about/:3:0","tags":null,"title":"About Visaal","uri":"/about/"}]